# Test Cases for jrnl Application

## Basic Functionality Tests

1. Add a task without due date
   - Command: jrnl task "Test task"
   - Expected: Task is created with today's date as due date

2. Add a task with due date keyword
   - Command: jrnl task "Test task @tomorrow"
   - Expected: Task is created with tomorrow's date as due date

3. Add a task with explicit due date
   - Command: jrnl task "Test task @2025-12-25"
   - Expected: Task is created with 2025-12-25 as due date

4. Add multiple tasks at once
   - Command: jrnl task "Task 1,Task 2 @tomorrow,Task 3 @eom"
   - Expected: Three tasks are created with appropriate due dates

5. Add a note without task association
   - Command: jrnl note "Standalone note"
   - Expected: Note is created without task association

6. Add a note to a specific task
   - Command: jrnl note 1 "Note for task 1"
   - Expected: Note is created and linked to task ID 1

7. Add a note to multiple tasks
   - Command: jrnl note 1,2 "Note for tasks 1 and 2"
   - Expected: Note is created and linked to both task IDs 1 and 2

## Display Tests

8. Default journal view shows tasks and notes correctly
   - Setup: Create tasks and notes
   - Command: jrnl
   - Expected: Shows tasks and notes grouped by creation date, with notes indented under their tasks and displayed with yellow foreground, and waiting tasks with gray background

9. Task view shows all unfinished tasks
   - Command: jrnl task
   - Expected: Shows all tasks with status not equal to 'done', with waiting tasks having gray background

10. Note view shows all notes
    - Command: jrnl note
    - Expected: Shows all notes with their task associations if any, with yellow foreground for better visibility
    - Status: IMPLEMENTED - Colors may not display correctly in all terminals

11. Due view groups tasks by due date
    - Command: jrnl due
    - Expected: Shows tasks grouped as Overdue / Due Today / This Week / This Month / Future / No Due Date, with notes displayed with yellow foreground and "doing" tasks with yellow background, and waiting tasks with gray background

12. Status view shows tasks grouped by status
    - Command: jrnl status
    - Expected: Shows tasks grouped by status in order: Todo, Doing, Waiting (no Done tasks)

13. Status view with alias
    - Command: jrnl s
    - Expected: Shows tasks grouped by status in order: Todo, Doing, Waiting (no Done tasks)

## Status Update Tests

14. Mark task as done
    - Command: jrnl done 1
    - Expected: Task ID 1 status is updated to 'done' and completion date is set

15. Mark task as doing
    - Command: jrnl doing 1
    - Expected: Task ID 1 status is updated to 'doing'

16. Mark task as waiting
    - Command: jrnl waiting 1
    - Expected: Task ID 1 status is updated to 'waiting'

17. Mark task as undone
    - Command: jrnl undone 1
    - Expected: Task ID 1 status is updated to 'todo' and completion date is cleared

18. Mark task as done using shortcut
    - Command: jrnl x 1
    - Expected: Task ID 1 status is updated to 'done' and completion date is set

## Due Date Update Tests

19. Update due date with keyword
    - Command: jrnl due 1 tomorrow
    - Expected: Task ID 1 has its due date updated to tomorrow

20. Update due date with explicit date
    - Command: jrnl due 1 2025-12-25
    - Expected: Task ID 1 has its due date updated to 2025-12-25

21. Update due date with day name
    - Command: jrnl due 1 tuesday
    - Expected: Task ID 1 has its due date updated to next Tuesday

22. Update due date with day name for multiple tasks
    - Command: jrnl due 1,2,3 friday
    - Expected: Task IDs 1, 2, and 3 have their due dates updated to next Friday

## New Feature Tests (Due Command with Notes)

21. Due view shows notes indented beneath their tasks
    - Setup: Create a task and add a note to it
    - Command: jrnl due
    - Expected: Shows tasks grouped by due date, with notes indented beneath their associated tasks
    - Status: PASSED - Implemented and tested

22. Due view shows multiple notes indented beneath their tasks
    - Setup: Create a task and add multiple notes to it
    - Command: jrnl due
    - Expected: Shows the task and all its notes indented beneath it
    - Status: PASSED - Implemented and tested

23. Due view correctly handles tasks with no notes
    - Setup: Create a task without any notes
    - Command: jrnl due
    - Expected: Shows the task without any notes beneath it
    - Status: PASSED - Implemented and tested

24. Due view correctly handles standalone notes
    - Note: Standalone notes (not associated with tasks) should not appear in the due view
    - Status: PASSED - Verified (standalone notes don't appear in due view)

25. Due view shows notes with yellow foreground
    - Setup: Create a task and add a note to it
    - Command: jrnl due
    - Expected: Notes are displayed with yellow foreground for better visibility
    - Status: IMPLEMENTED - Colors may not display correctly in all terminals

26. Default journal view shows notes with yellow foreground
    - Setup: Create a task and add a note to it
    - Command: jrnl
    - Expected: Notes are displayed with yellow foreground for better visibility
    - Status: IMPLEMENTED - Colors may not display correctly in all terminals

27. Tasks with "waiting" status have gray background
    - Setup: Create a task and change its status to "waiting"
    - Command: jrnl task, jrnl due
    - Expected: Tasks with "waiting" status are displayed with gray background
    - Status: IMPLEMENTED - Colors may not display correctly in all terminals

28. Tasks with "doing" status have yellow background
    - Setup: Create a task and change its status to "doing"
    - Command: jrnl due
    - Expected: Tasks with "doing" status are displayed with yellow background and black text
    - Status: IMPLEMENTED - Colors may not display correctly in all terminals

## New Feature Tests (Enhanced Due Command Grouping)

56. Due view groups tasks by detailed due date categories
    - Command: jrnl due
    - Expected: Shows tasks grouped as Overdue / Due Today / This Week / This Month / Future / No Due Date
    - Status: IMPLEMENTED - Tested and working

57. Due view shows overdue tasks in Overdue section
    - Setup: Create a task with a due date in the past
    - Command: jrnl due
    - Expected: Task appears in the Overdue section
    - Status: IMPLEMENTED - Tested and working

58. Due view shows today's tasks in Due Today section
    - Setup: Create a task with today's due date
    - Command: jrnl due
    - Expected: Task appears in the Due Today section
    - Status: IMPLEMENTED - Tested and working

59. Due view shows this week's tasks in This Week section
    - Setup: Create a task with a due date later this week (but not today)
    - Command: jrnl due
    - Expected: Task appears in the This Week section
    - Status: IMPLEMENTED - Tested and working

60. Due view shows this month's tasks in This Month section
    - Setup: Create a task with a due date later this month (but not this week)
    - Command: jrnl due
    - Expected: Task appears in the This Month section
    - Status: IMPLEMENTED - Tested and working

61. Due view shows future tasks in Future section
    - Setup: Create a task with a due date next month or later
    - Command: jrnl due
    - Expected: Task appears in the Future section
    - Status: IMPLEMENTED - Tested and working

62. Due view shows tasks with no due date in No Due Date section
    - Setup: Create a task without a due date
    - Command: jrnl due
    - Expected: Task appears in the No Due Date section
    - Status: IMPLEMENTED - Tested and working (Note: Tasks without explicit due dates default to today's date)

63. Due view with alias shows enhanced grouping
    - Command: jrnl d
    - Expected: Shows tasks grouped as Overdue / Due Today / This Week / This Month / Future / No Due Date
    - Status: IMPLEMENTED - Tested and working

## New Feature Tests (Find/Search Functionality)

42. Search for text in tasks and notes
    - Setup: Create tasks and notes with various content
    - Command: jrnl find "search term"
    - Expected: Shows tasks and notes matching the search term, formatted like the default journal view

43. Search using alias command
    - Setup: Create tasks and notes with various content
    - Command: jrnl f "search term"
    - Expected: Shows tasks and notes matching the search term, formatted like the default journal view

44. Search with no matches
    - Command: jrnl find "nonexistent term"
    - Expected: Shows no results message or empty output

45. Search with case sensitivity
    - Setup: Create a task with "Important Task" title
    - Command: jrnl find "important"
    - Expected: Should find the task if search is case-insensitive

46. Search matches in task titles
    - Setup: Create tasks with titles containing specific terms
    - Command: jrnl find "specific term"
    - Expected: Shows only tasks with titles containing the search term

47. Search matches in note text
    - Setup: Create notes with text containing specific terms
    - Command: jrnl find "specific term"
    - Expected: Shows only notes with text containing the search term

48. Search matches both tasks and notes
    - Setup: Create tasks and notes both containing the same search term
    - Command: jrnl find "common term"
    - Expected: Shows both matching tasks and notes, properly formatted

## New Feature Tests (Task and Done Views with Notes)

32. Task view shows notes indented beneath their tasks
    - Setup: Create a task and add a note to it
    - Command: jrnl task
    - Expected: Shows all unfinished tasks, with notes indented beneath their associated tasks
    - Status: IMPLEMENTED - Tested and working

33. Task view shows multiple notes indented beneath their tasks
    - Setup: Create a task and add multiple notes to it
    - Command: jrnl task
    - Expected: Shows the task and all its notes indented beneath it
    - Status: IMPLEMENTED - Tested and working

34. Task view correctly handles tasks with no notes
    - Setup: Create a task without any notes
    - Command: jrnl task
    - Expected: Shows the task without any notes beneath it
    - Status: IMPLEMENTED - Tested and working

35. Done view shows notes indented beneath their tasks
    - Setup: Create a task, add a note to it, and mark it as done
    - Command: jrnl done
    - Expected: Shows all completed tasks grouped by completion date, with notes indented beneath their associated tasks
    - Status: IMPLEMENTED - Tested and working

36. Done view shows multiple notes indented beneath their tasks
    - Setup: Create a task, add multiple notes to it, and mark it as done
    - Command: jrnl done
    - Expected: Shows the task and all its notes indented beneath it
    - Status: IMPLEMENTED - Tested and working

37. Done view correctly handles tasks with no notes
    - Setup: Create a task without any notes and mark it as done
    - Command: jrnl done
    - Expected: Shows the task without any notes beneath it
    - Status: IMPLEMENTED - Tested and working

38. Status view shows notes indented beneath their tasks
    - Setup: Create a task, add a note to it
    - Command: jrnl status
    - Expected: Shows all unfinished tasks grouped by status, with notes indented beneath their associated tasks
    - Status: IMPLEMENTED - Tested and working

39. Status view shows multiple notes indented beneath their tasks
    - Setup: Create a task, add multiple notes to it
    - Command: jrnl status
    - Expected: Shows the task and all its notes indented beneath it
    - Status: IMPLEMENTED - Tested and working

40. Status view correctly handles tasks with no notes
    - Setup: Create a task without any notes
    - Command: jrnl status
    - Expected: Shows the task without any notes beneath it
    - Status: IMPLEMENTED - Tested and working

## New Feature Tests (Date Display with Day Names)

41. Default journal view shows dates with day names
    - Setup: Create tasks and notes
    - Command: jrnl
    - Expected: Dates are displayed with day names (e.g., "Friday, 2025-09-19")
    - Status: IMPLEMENTED - Tested and working

42. Task view shows dates with day names
    - Setup: Create tasks
    - Command: jrnl task
    - Expected: Dates are displayed with day names (e.g., "Friday, 2025-09-19")
    - Status: IMPLEMENTED - Tested and working

43. Note view shows dates with day names
    - Setup: Create notes
    - Command: jrnl note
    - Expected: Dates are displayed with day names (e.g., "Friday, 2025-09-19")
    - Status: IMPLEMENTED - Tested and working

44. Done view shows dates with day names
    - Setup: Create tasks and mark them as done
    - Command: jrnl done
    - Expected: Dates are displayed with day names (e.g., "Friday, 2025-09-19")
    - Status: IMPLEMENTED - Tested and working

45. Task view shows due dates with day names
    - Setup: Create tasks with due dates
    - Command: jrnl task
    - Expected: Due dates are displayed with day names (e.g., "due: Monday, 2025-09-22")
    - Status: IMPLEMENTED - Tested and working

46. Default journal view shows due dates with day names
    - Setup: Create tasks with due dates
    - Command: jrnl
    - Expected: Due dates are displayed with day names (e.g., "due: Monday, 2025-09-22")
    - Status: IMPLEMENTED - Tested and working

47. Done view shows due dates with day names
    - Setup: Create tasks with due dates and mark them as done
    - Command: jrnl done
    - Expected: Due dates are displayed with day names (e.g., "due: Monday, 2025-09-22")
    - Status: IMPLEMENTED - Tested and working

## Recurring Tasks Tests

24. Set task as recurring
    - Command: jrnl recur 1 4w
    - Expected: Task ID 1 is set to recur every 4 weeks

25. Complete recurring task creates new task
    - Setup: Create a recurring task
    - Command: jrnl done 1
    - Expected: Original task is marked as done and a new task is created with updated due date

## Delete Tests

26. Delete a task
    - Command: jrnl rm t1
    - Expected: Task ID 1 is deleted along with any associated notes

27. Delete a note
    - Command: jrnl rm n1
    - Expected: Note ID 1 is deleted

28. Delete multiple tasks and notes
    - Command: jrnl rm t1,n1,t2,n2
    - Expected: All specified tasks and notes are deleted

## Alias Tests

29. Use 't' alias for adding tasks
    - Command: jrnl t "Test task"
    - Expected: Task is created (same as using 'task')

30. Use 'n' alias for adding notes
    - Command: jrnl n "Test note"
    - Expected: Note is created (same as using 'note')

30. Use 'd' alias for due view
    - Command: jrnl d
    - Expected: Shows due view (same as using 'due')

## New Feature Tests (Edit Functionality)

48. Edit task title
    - Setup: Create a task with a specific title
    - Command: jrnl edit t1 "New task title"
    - Expected: Task ID 1 has its title updated to "New task title"

49. Edit note text
    - Setup: Create a note with specific text
    - Command: jrnl edit n1 "New note text"
    - Expected: Note ID 1 has its text updated to "New note text"

50. Edit task title with spaces
    - Setup: Create a task
    - Command: jrnl edit t1 "Task title with multiple words"
    - Expected: Task ID 1 has its title updated correctly

51. Edit note text with spaces
    - Setup: Create a note
    - Command: jrnl edit n1 "Note text with multiple words"
    - Expected: Note ID 1 has its text updated correctly

52. Edit non-existent task
    - Command: jrnl edit t999 "New title"
    - Expected: Error message indicating task not found

53. Edit non-existent note
    - Command: jrnl edit n999 "New text"
    - Expected: Error message indicating note not found

54. Edit with missing ID
    - Command: jrnl edit t "New title"
    - Expected: Error message indicating invalid format

55. Edit with missing text
    - Command: jrnl edit t1
    - Expected: Error message indicating missing text